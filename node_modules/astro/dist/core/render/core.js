import { renderEndpoint, renderHead, renderToString } from "../../runtime/server/index.js";
import { getParams } from "../routing/index.js";
import { createResult } from "./result.js";
import { findPathItemByKey, callGetStaticPaths } from "./route-cache.js";
var GetParamsAndPropsError = /* @__PURE__ */ ((GetParamsAndPropsError2) => {
  GetParamsAndPropsError2[GetParamsAndPropsError2["NoMatchingStaticPath"] = 0] = "NoMatchingStaticPath";
  return GetParamsAndPropsError2;
})(GetParamsAndPropsError || {});
async function getParamsAndProps(opts) {
  const { logging, mod, route, routeCache, pathname } = opts;
  let params = {};
  let pageProps;
  if (route && !route.pathname) {
    if (route.params.length) {
      const paramsMatch = route.pattern.exec(pathname);
      if (paramsMatch) {
        params = getParams(route.params)(paramsMatch);
      }
    }
    let routeCacheEntry = routeCache.get(route);
    if (!routeCacheEntry) {
      routeCacheEntry = await callGetStaticPaths(mod, route, true, logging);
      routeCache.set(route, routeCacheEntry);
    }
    const matchedStaticPath = findPathItemByKey(routeCacheEntry.staticPaths, params);
    if (!matchedStaticPath) {
      return 0 /* NoMatchingStaticPath */;
    }
    pageProps = Object.create(matchedStaticPath.props || Object.prototype);
  } else {
    pageProps = {};
  }
  return [params, pageProps];
}
async function render(opts) {
  const { legacyBuild, links, logging, origin, markdownRender, mod, pathname, scripts, renderers, resolve, route, routeCache, site } = opts;
  const paramsAndPropsRes = await getParamsAndProps({
    logging,
    mod,
    route,
    routeCache,
    pathname
  });
  if (paramsAndPropsRes === 0 /* NoMatchingStaticPath */) {
    throw new Error(`[getStaticPath] route pattern matched, but no matching static path found. (${pathname})`);
  }
  const [params, pageProps] = paramsAndPropsRes;
  if ((route == null ? void 0 : route.type) === "endpoint") {
    return renderEndpoint(mod, params);
  }
  const Component = await mod.default;
  if (!Component)
    throw new Error(`Expected an exported Astro component but received typeof ${typeof Component}`);
  if (!Component.isAstroComponentFactory)
    throw new Error(`Unable to SSR non-Astro component (${route == null ? void 0 : route.component})`);
  const result = createResult({
    legacyBuild,
    links,
    logging,
    markdownRender,
    origin,
    params,
    pathname,
    resolve,
    renderers,
    site,
    scripts
  });
  let html = await renderToString(result, Component, pageProps, null);
  if (html.indexOf("<!--astro:head:injected-->") == -1) {
    html = await renderHead(result) + html;
  }
  html = html.replace("<!--astro:head:injected-->", "");
  if (!legacyBuild && !/<!doctype html/i.test(html)) {
    html = "<!DOCTYPE html>\n" + html;
  }
  return html;
}
export {
  GetParamsAndPropsError,
  getParamsAndProps,
  render
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvcmUvcmVuZGVyL2NvcmUudHMiXSwKICAibWFwcGluZ3MiOiAiQUFHQTtBQUNBO0FBQ0E7QUFDQTtBQVdPLElBQVcseUJBQVgsa0JBQVcsNEJBQVg7QUFDTjtBQURpQjtBQUFBO0FBSWxCLGlDQUF3QyxNQUFtRjtBQUMxSCxRQUFNLEVBQUUsU0FBUyxLQUFLLE9BQU8sWUFBWSxhQUFhO0FBRXRELE1BQUksU0FBaUIsQ0FBQztBQUN0QixNQUFJO0FBQ0osTUFBSSxTQUFTLENBQUMsTUFBTSxVQUFVO0FBQzdCLFFBQUksTUFBTSxPQUFPLFFBQVE7QUFDeEIsWUFBTSxjQUFjLE1BQU0sUUFBUSxLQUFLLFFBQVE7QUFDL0MsVUFBSSxhQUFhO0FBQ2hCLGlCQUFTLFVBQVUsTUFBTSxNQUFNLEVBQUUsV0FBVztBQUFBLE1BQzdDO0FBQUEsSUFDRDtBQUNBLFFBQUksa0JBQWtCLFdBQVcsSUFBSSxLQUFLO0FBSzFDLFFBQUksQ0FBQyxpQkFBaUI7QUFDckIsd0JBQWtCLE1BQU0sbUJBQW1CLEtBQUssT0FBTyxNQUFNLE9BQU87QUFDcEUsaUJBQVcsSUFBSSxPQUFPLGVBQWU7QUFBQSxJQUN0QztBQUNBLFVBQU0sb0JBQW9CLGtCQUFrQixnQkFBZ0IsYUFBYSxNQUFNO0FBQy9FLFFBQUksQ0FBQyxtQkFBbUI7QUFDdkIsYUFBTztBQUFBLElBQ1I7QUFHQSxnQkFBWSxPQUFPLE9BQU8sa0JBQWtCLFNBQVMsT0FBTyxTQUFTO0FBQUEsRUFDdEUsT0FBTztBQUNOLGdCQUFZLENBQUM7QUFBQSxFQUNkO0FBQ0EsU0FBTyxDQUFDLFFBQVEsU0FBUztBQUMxQjtBQWtCQSxzQkFBNkIsTUFBc0M7QUFDbEUsUUFBTSxFQUFFLGFBQWEsT0FBTyxTQUFTLFFBQVEsZ0JBQWdCLEtBQUssVUFBVSxTQUFTLFdBQVcsU0FBUyxPQUFPLFlBQVksU0FBUztBQUVySSxRQUFNLG9CQUFvQixNQUFNLGtCQUFrQjtBQUFBLElBQ2pEO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLEVBQ0QsQ0FBQztBQUVELE1BQUksc0JBQXNCLDhCQUE2QztBQUN0RSxVQUFNLElBQUksTUFBTSw4RUFBOEUsV0FBVztBQUFBLEVBQzFHO0FBQ0EsUUFBTSxDQUFDLFFBQVEsYUFBYTtBQUc1QixNQUFJLGdDQUFPLFVBQVMsWUFBWTtBQUMvQixXQUFPLGVBQWUsS0FBK0IsTUFBTTtBQUFBLEVBQzVEO0FBR0EsUUFBTSxZQUFZLE1BQU0sSUFBSTtBQUM1QixNQUFJLENBQUM7QUFBVyxVQUFNLElBQUksTUFBTSw0REFBNEQsT0FBTyxXQUFXO0FBQzlHLE1BQUksQ0FBQyxVQUFVO0FBQXlCLFVBQU0sSUFBSSxNQUFNLHNDQUFzQywrQkFBTyxZQUFZO0FBRWpILFFBQU0sU0FBUyxhQUFhO0FBQUEsSUFDM0I7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsSUFDQTtBQUFBLElBQ0E7QUFBQSxJQUNBO0FBQUEsRUFDRCxDQUFDO0FBRUQsTUFBSSxPQUFPLE1BQU0sZUFBZSxRQUFRLFdBQVcsV0FBVyxJQUFJO0FBR2xFLE1BQUksS0FBSyxRQUFRLDRCQUE0QixLQUFLLElBQUk7QUFDckQsV0FBUSxNQUFNLFdBQVcsTUFBTSxJQUFLO0FBQUEsRUFDckM7QUFFQSxTQUFPLEtBQUssUUFBUSw4QkFBOEIsRUFBRTtBQUdwRCxNQUFJLENBQUMsZUFBZSxDQUFDLGtCQUFrQixLQUFLLElBQUksR0FBRztBQUNsRCxXQUFPLHNCQUFzQjtBQUFBLEVBQzlCO0FBRUEsU0FBTztBQUNSOyIsCiAgIm5hbWVzIjogW10KfQo=
