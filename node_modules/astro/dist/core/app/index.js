var __accessCheck = (obj, member, msg) => {
  if (!member.has(obj))
    throw TypeError("Cannot " + msg);
};
var __privateGet = (obj, member, getter) => {
  __accessCheck(obj, member, "read from private field");
  return getter ? getter.call(obj) : member.get(obj);
};
var __privateAdd = (obj, member, value) => {
  if (member.has(obj))
    throw TypeError("Cannot add the same private member more than once");
  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
};
var __privateSet = (obj, member, value, setter) => {
  __accessCheck(obj, member, "write to private field");
  setter ? setter.call(obj, value) : member.set(obj, value);
  return value;
};
var __privateMethod = (obj, member, method) => {
  __accessCheck(obj, member, "access private method");
  return method;
};
var _manifest, _manifestData, _rootFolder, _routeDataToRouteInfo, _routeCache, _renderersPromise, _loadRenderers, loadRenderers_fn, _loadModule, loadModule_fn;
import { defaultLogOptions } from "../logger.js";
import { matchRoute } from "../routing/match.js";
import { render } from "../render/core.js";
import { RouteCache } from "../render/route-cache.js";
import { createLinkStylesheetElementSet, createModuleScriptElementWithSrcSet } from "../render/ssr-element.js";
import { createRenderer } from "../render/renderer.js";
import { prependForwardSlash } from "../path.js";
class App {
  constructor(manifest, rootFolder) {
    __privateAdd(this, _loadRenderers);
    __privateAdd(this, _loadModule);
    __privateAdd(this, _manifest, void 0);
    __privateAdd(this, _manifestData, void 0);
    __privateAdd(this, _rootFolder, void 0);
    __privateAdd(this, _routeDataToRouteInfo, void 0);
    __privateAdd(this, _routeCache, void 0);
    __privateAdd(this, _renderersPromise, void 0);
    __privateSet(this, _manifest, manifest);
    __privateSet(this, _manifestData, {
      routes: manifest.routes.map((route) => route.routeData)
    });
    __privateSet(this, _rootFolder, rootFolder);
    __privateSet(this, _routeDataToRouteInfo, new Map(manifest.routes.map((route) => [route.routeData, route])));
    __privateSet(this, _routeCache, new RouteCache(defaultLogOptions));
    __privateSet(this, _renderersPromise, __privateMethod(this, _loadRenderers, loadRenderers_fn).call(this));
  }
  match({ pathname }) {
    return matchRoute(pathname, __privateGet(this, _manifestData));
  }
  async render(url, routeData) {
    if (!routeData) {
      routeData = this.match(url);
      if (!routeData) {
        return "Not found";
      }
    }
    const manifest = __privateGet(this, _manifest);
    const info = __privateGet(this, _routeDataToRouteInfo).get(routeData);
    const [mod, renderers] = await Promise.all([__privateMethod(this, _loadModule, loadModule_fn).call(this, info.file), __privateGet(this, _renderersPromise)]);
    const links = createLinkStylesheetElementSet(info.links, manifest.site);
    const scripts = createModuleScriptElementWithSrcSet(info.scripts, manifest.site);
    return render({
      legacyBuild: false,
      links,
      logging: defaultLogOptions,
      markdownRender: manifest.markdown.render,
      mod,
      origin: url.origin,
      pathname: url.pathname,
      scripts,
      renderers,
      async resolve(specifier) {
        if (!(specifier in manifest.entryModules)) {
          throw new Error(`Unable to resolve [${specifier}]`);
        }
        const bundlePath = manifest.entryModules[specifier];
        return prependForwardSlash(bundlePath);
      },
      route: routeData,
      routeCache: __privateGet(this, _routeCache),
      site: __privateGet(this, _manifest).site
    });
  }
}
_manifest = new WeakMap();
_manifestData = new WeakMap();
_rootFolder = new WeakMap();
_routeDataToRouteInfo = new WeakMap();
_routeCache = new WeakMap();
_renderersPromise = new WeakMap();
_loadRenderers = new WeakSet();
loadRenderers_fn = async function() {
  const rendererNames = __privateGet(this, _manifest).renderers;
  return await Promise.all(rendererNames.map(async (rendererName) => {
    return createRenderer(rendererName, {
      renderer(name) {
        return import(name);
      },
      server(entry) {
        return import(entry);
      }
    });
  }));
};
_loadModule = new WeakSet();
loadModule_fn = async function(rootRelativePath) {
  let modUrl = new URL(rootRelativePath, __privateGet(this, _rootFolder)).toString();
  let mod;
  try {
    mod = await import(modUrl);
    return mod;
  } catch (err) {
    throw new Error(`Unable to import ${modUrl}. Does this file exist?`);
  }
};
export {
  App
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vc3JjL2NvcmUvYXBwL2luZGV4LnRzIl0sCiAgIm1hcHBpbmdzIjogIjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFTyxNQUFNLElBQUk7QUFBQSxFQVFoQixZQUFZLFVBQW9CLFlBQWlCO0FBa0QzQztBQWVBO0FBeEVOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdDLHVCQUFLLFdBQVk7QUFDakIsdUJBQUssZUFBZ0I7QUFBQSxNQUNwQixRQUFRLFNBQVMsT0FBTyxJQUFJLENBQUMsVUFBVSxNQUFNLFNBQVM7QUFBQSxJQUN2RDtBQUNBLHVCQUFLLGFBQWM7QUFDbkIsdUJBQUssdUJBQXdCLElBQUksSUFBSSxTQUFTLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLFdBQVcsS0FBSyxDQUFDLENBQUM7QUFDN0YsdUJBQUssYUFBYyxJQUFJLFdBQVcsaUJBQWlCO0FBQ25ELHVCQUFLLG1CQUFvQixzQkFBSyxrQ0FBTDtBQUFBLEVBQzFCO0FBQUEsRUFDQSxNQUFNLEVBQUUsWUFBd0M7QUFDL0MsV0FBTyxXQUFXLFVBQVUsbUJBQUssY0FBYTtBQUFBLEVBQy9DO0FBQUEsUUFDTSxPQUFPLEtBQVUsV0FBd0M7QUFDOUQsUUFBSSxDQUFDLFdBQVc7QUFDZixrQkFBWSxLQUFLLE1BQU0sR0FBRztBQUMxQixVQUFJLENBQUMsV0FBVztBQUNmLGVBQU87QUFBQSxNQUNSO0FBQUEsSUFDRDtBQUVBLFVBQU0sV0FBVyxtQkFBSztBQUN0QixVQUFNLE9BQU8sbUJBQUssdUJBQXNCLElBQUksU0FBVTtBQUN0RCxVQUFNLENBQUMsS0FBSyxhQUFhLE1BQU0sUUFBUSxJQUFJLENBQUMsc0JBQUssNEJBQUwsV0FBaUIsS0FBSyxPQUFPLG1CQUFLLGtCQUFpQixDQUFDO0FBRWhHLFVBQU0sUUFBUSwrQkFBK0IsS0FBSyxPQUFPLFNBQVMsSUFBSTtBQUN0RSxVQUFNLFVBQVUsb0NBQW9DLEtBQUssU0FBUyxTQUFTLElBQUk7QUFFL0UsV0FBTyxPQUFPO0FBQUEsTUFDYixhQUFhO0FBQUEsTUFDYjtBQUFBLE1BQ0EsU0FBUztBQUFBLE1BQ1QsZ0JBQWdCLFNBQVMsU0FBUztBQUFBLE1BQ2xDO0FBQUEsTUFDQSxRQUFRLElBQUk7QUFBQSxNQUNaLFVBQVUsSUFBSTtBQUFBLE1BQ2Q7QUFBQSxNQUNBO0FBQUEsWUFDTSxRQUFRLFdBQW1CO0FBQ2hDLFlBQUksQ0FBRSxjQUFhLFNBQVMsZUFBZTtBQUMxQyxnQkFBTSxJQUFJLE1BQU0sc0JBQXNCLFlBQVk7QUFBQSxRQUNuRDtBQUNBLGNBQU0sYUFBYSxTQUFTLGFBQWE7QUFDekMsZUFBTyxvQkFBb0IsVUFBVTtBQUFBLE1BQ3RDO0FBQUEsTUFDQSxPQUFPO0FBQUEsTUFDUCxZQUFZLG1CQUFLO0FBQUEsTUFDakIsTUFBTSxtQkFBSyxXQUFVO0FBQUEsSUFDdEIsQ0FBQztBQUFBLEVBQ0Y7QUEwQkQ7QUFsRkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBb0RNO0FBQUEsbUJBQWMsaUJBQXdCO0FBQzNDLFFBQU0sZ0JBQWdCLG1CQUFLLFdBQVU7QUFDckMsU0FBTyxNQUFNLFFBQVEsSUFDcEIsY0FBYyxJQUFJLE9BQU8saUJBQWlCO0FBQ3pDLFdBQU8sZUFBZSxjQUFjO0FBQUEsTUFDbkMsU0FBUyxNQUFNO0FBQ2QsZUFBTyxPQUFPO0FBQUEsTUFDZjtBQUFBLE1BQ0EsT0FBTyxPQUFPO0FBQ2IsZUFBTyxPQUFPO0FBQUEsTUFDZjtBQUFBLElBQ0QsQ0FBQztBQUFBLEVBQ0YsQ0FBQyxDQUNGO0FBQ0Q7QUFDTTtBQUFBLGdCQUFXLGVBQUMsa0JBQXNEO0FBQ3ZFLE1BQUksU0FBUyxJQUFJLElBQUksa0JBQWtCLG1CQUFLLFlBQVcsRUFBRSxTQUFTO0FBQ2xFLE1BQUk7QUFDSixNQUFJO0FBQ0gsVUFBTSxNQUFNLE9BQU87QUFDbkIsV0FBTztBQUFBLEVBQ1IsU0FBUyxLQUFQO0FBQ0QsVUFBTSxJQUFJLE1BQU0sb0JBQW9CLCtCQUErQjtBQUFBLEVBQ3BFO0FBQ0Q7IiwKICAibmFtZXMiOiBbXQp9Cg==
