import * as babel from "@babel/core";
const validAstroGlobalNames = /* @__PURE__ */ new Set(["Astro", "Astro2"]);
function astro({ config }) {
  return {
    name: "astro:postprocess",
    async transform(code, id) {
      if (!id.endsWith(".astro") && !id.endsWith(".md")) {
        return null;
      }
      if (!code.includes("fetchContent")) {
        return null;
      }
      const result = await babel.transformAsync(code, {
        sourceType: "module",
        sourceMaps: true,
        plugins: [
          () => {
            return {
              visitor: {
                StringLiteral(path) {
                  if (path.parent.type !== "CallExpression" || path.parent.callee.type !== "MemberExpression" || !validAstroGlobalNames.has(path.parent.callee.object.name) || path.parent.callee.property.name !== "fetchContent") {
                    return;
                  }
                  const { value } = path.node;
                  if (/[a-z]\:\/\//.test(value)) {
                    return;
                  }
                  path.replaceWith({
                    type: "CallExpression",
                    callee: {
                      type: "MemberExpression",
                      object: { type: "MetaProperty", meta: { type: "Identifier", name: "import" }, property: { type: "Identifier", name: "meta" } },
                      property: { type: "Identifier", name: "globEager" },
                      computed: false
                    },
                    arguments: [path.node]
                  });
                }
              }
            };
          }
        ]
      });
      if (!result || !result.code) {
        return null;
      }
      return { code: result.code, map: result.map };
    }
  };
}
export {
  astro as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL3ZpdGUtcGx1Z2luLWFzdHJvLXBvc3Rwcm9jZXNzL2luZGV4LnRzIl0sCiAgIm1hcHBpbmdzIjogIkFBS0E7QUFPQSxNQUFNLHdCQUF3QixvQkFBSSxJQUFJLENBQUMsU0FBUyxRQUFRLENBQUM7QUFFMUMsZUFBZSxFQUFFLFVBQXNDO0FBQ3JFLFNBQU87QUFBQSxJQUNOLE1BQU07QUFBQSxVQUNBLFVBQVUsTUFBTSxJQUFJO0FBRXpCLFVBQUksQ0FBQyxHQUFHLFNBQVMsUUFBUSxLQUFLLENBQUMsR0FBRyxTQUFTLEtBQUssR0FBRztBQUNsRCxlQUFPO0FBQUEsTUFDUjtBQUlBLFVBQUksQ0FBQyxLQUFLLFNBQVMsY0FBYyxHQUFHO0FBQ25DLGVBQU87QUFBQSxNQUNSO0FBR0EsWUFBTSxTQUFTLE1BQU0sTUFBTSxlQUFlLE1BQU07QUFBQSxRQUMvQyxZQUFZO0FBQUEsUUFDWixZQUFZO0FBQUEsUUFDWixTQUFTO0FBQUEsVUFDUixNQUFNO0FBQ0wsbUJBQU87QUFBQSxjQUNOLFNBQVM7QUFBQSxnQkFDUixjQUFjLE1BQStDO0FBQzVELHNCQUNDLEtBQUssT0FBTyxTQUFTLG9CQUNyQixLQUFLLE9BQU8sT0FBTyxTQUFTLHNCQUM1QixDQUFDLHNCQUFzQixJQUFLLEtBQUssT0FBTyxPQUFPLE9BQWUsSUFBSSxLQUNqRSxLQUFLLE9BQU8sT0FBTyxTQUFpQixTQUFTLGdCQUM3QztBQUNEO0FBQUEsa0JBQ0Q7QUFDQSx3QkFBTSxFQUFFLFVBQVUsS0FBSztBQUN2QixzQkFBSSxjQUFjLEtBQUssS0FBSyxHQUFHO0FBQzlCO0FBQUEsa0JBQ0Q7QUFDQSx1QkFBSyxZQUFZO0FBQUEsb0JBQ2hCLE1BQU07QUFBQSxvQkFDTixRQUFRO0FBQUEsc0JBQ1AsTUFBTTtBQUFBLHNCQUNOLFFBQVEsRUFBRSxNQUFNLGdCQUFnQixNQUFNLEVBQUUsTUFBTSxjQUFjLE1BQU0sU0FBUyxHQUFHLFVBQVUsRUFBRSxNQUFNLGNBQWMsTUFBTSxPQUFPLEVBQUU7QUFBQSxzQkFDN0gsVUFBVSxFQUFFLE1BQU0sY0FBYyxNQUFNLFlBQVk7QUFBQSxzQkFDbEQsVUFBVTtBQUFBLG9CQUNYO0FBQUEsb0JBQ0EsV0FBVyxDQUFDLEtBQUssSUFBSTtBQUFBLGtCQUN0QixDQUFRO0FBQUEsZ0JBQ1Q7QUFBQSxjQUNEO0FBQUEsWUFDRDtBQUFBLFVBQ0Q7QUFBQSxRQUNEO0FBQUEsTUFDRCxDQUFDO0FBR0QsVUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLE1BQU07QUFDNUIsZUFBTztBQUFBLE1BQ1I7QUFFQSxhQUFPLEVBQUUsTUFBTSxPQUFPLE1BQU0sS0FBSyxPQUFPLElBQUk7QUFBQSxJQUM3QztBQUFBLEVBQ0Q7QUFDRDsiLAogICJuYW1lcyI6IFtdCn0K
