import fs from "fs";
import { fileURLToPath } from "url";
import { transform } from "@astrojs/compiler";
import { transformWithVite } from "./styles.js";
function createImportPlaceholder(spec) {
  return `/*IMPORT:${spec}*/`;
}
function safelyReplaceImportPlaceholder(code) {
  return code.replace(/\/\*IMPORT\:(.*?)\*\//g, `@import '$1';`);
}
const configCache = /* @__PURE__ */ new WeakMap();
async function compile(config, filename, source, viteTransform, opts) {
  const filenameURL = new URL(`file://${filename}`);
  const normalizedID = fileURLToPath(filenameURL);
  const pathname = filenameURL.pathname.substr(config.projectRoot.pathname.length - 1);
  let rawCSSDeps = /* @__PURE__ */ new Set();
  let cssTransformError;
  const transformResult = await transform(source, {
    pathname,
    projectRoot: config.projectRoot.toString(),
    site: config.buildOptions.site,
    sourcefile: filename,
    sourcemap: "both",
    internalURL: `/@fs${new URL("../runtime/server/index.js", import.meta.url).pathname}`,
    experimentalStaticExtraction: !config.buildOptions.legacyBuild,
    preprocessStyle: async (value, attrs) => {
      const lang = `.${(attrs == null ? void 0 : attrs.lang) || "css"}`.toLowerCase();
      try {
        if (!config.buildOptions.legacyBuild) {
          value.replace(/(?:@import)\s(?:url\()?\s?["\'](.*?)["\']\s?\)?(?:[^;]*);?/gi, (match, spec) => {
            rawCSSDeps.add(spec);
            if (lang === ".css") {
              return createImportPlaceholder(spec);
            } else {
              return match;
            }
          });
        }
        const result = await transformWithVite({
          value,
          lang,
          id: normalizedID,
          transformHook: viteTransform,
          ssr: opts.ssr
        });
        let map;
        if (!result)
          return null;
        if (result.map) {
          if (typeof result.map === "string") {
            map = result.map;
          } else if (result.map.mappings) {
            map = result.map.toString();
          }
        }
        const code = safelyReplaceImportPlaceholder(result.code);
        return { code, map };
      } catch (err) {
        cssTransformError = err;
        return null;
      }
    }
  });
  if (cssTransformError)
    throw cssTransformError;
  const compileResult = Object.create(transformResult, {
    rawCSSDeps: {
      value: rawCSSDeps
    }
  });
  return compileResult;
}
function isCached(config, filename) {
  return configCache.has(config) && configCache.get(config).has(filename);
}
function invalidateCompilation(config, filename) {
  if (configCache.has(config)) {
    const cache = configCache.get(config);
    cache.delete(filename);
  }
}
async function cachedCompilation(config, filename, source, viteTransform, opts) {
  let cache;
  if (!configCache.has(config)) {
    cache = /* @__PURE__ */ new Map();
    configCache.set(config, cache);
  } else {
    cache = configCache.get(config);
  }
  if (cache.has(filename)) {
    return cache.get(filename);
  }
  if (source === null) {
    const fileUrl = new URL(`file://${filename}`);
    source = await fs.promises.readFile(fileUrl, "utf-8");
  }
  const compileResult = await compile(config, filename, source, viteTransform, opts);
  cache.set(filename, compileResult);
  return compileResult;
}
export {
  cachedCompilation,
  invalidateCompilation,
  isCached
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL3ZpdGUtcGx1Z2luLWFzdHJvL2NvbXBpbGUudHMiXSwKICAibWFwcGluZ3MiOiAiQUFLQTtBQUNBO0FBQ0E7QUFDQTtBQWNBLGlDQUFpQyxNQUFjO0FBSTlDLFNBQU8sWUFBWTtBQUNwQjtBQUNBLHdDQUF3QyxNQUFjO0FBQ3JELFNBQU8sS0FBSyxRQUFRLDBCQUEwQixlQUFlO0FBQzlEO0FBRUEsTUFBTSxjQUFjLG9CQUFJLFFBQXVDO0FBRS9ELHVCQUF1QixRQUFxQixVQUFrQixRQUFnQixlQUE4QixNQUFnRDtBQUMzSixRQUFNLGNBQWMsSUFBSSxJQUFJLFVBQVUsVUFBVTtBQUNoRCxRQUFNLGVBQWUsY0FBYyxXQUFXO0FBQzlDLFFBQU0sV0FBVyxZQUFZLFNBQVMsT0FBTyxPQUFPLFlBQVksU0FBUyxTQUFTLENBQUM7QUFFbkYsTUFBSSxhQUFhLG9CQUFJLElBQVk7QUFDakMsTUFBSTtBQUtKLFFBQU0sa0JBQWtCLE1BQU0sVUFBVSxRQUFRO0FBQUEsSUFDL0M7QUFBQSxJQUNBLGFBQWEsT0FBTyxZQUFZLFNBQVM7QUFBQSxJQUN6QyxNQUFNLE9BQU8sYUFBYTtBQUFBLElBQzFCLFlBQVk7QUFBQSxJQUNaLFdBQVc7QUFBQSxJQUNYLGFBQWEsT0FBTyxJQUFJLElBQUksOEJBQThCLFlBQVksR0FBRyxFQUFFO0FBQUEsSUFDM0UsOEJBQThCLENBQUMsT0FBTyxhQUFhO0FBQUEsSUFFbkQsaUJBQWlCLE9BQU8sT0FBZSxVQUFrQztBQUN4RSxZQUFNLE9BQU8sSUFBSSxnQ0FBTyxTQUFRLFFBQVEsWUFBWTtBQUVwRCxVQUFJO0FBRUgsWUFBSSxDQUFDLE9BQU8sYUFBYSxhQUFhO0FBQ3JDLGdCQUFNLFFBQVEsZ0VBQWdFLENBQUMsT0FBTyxTQUFTO0FBQzlGLHVCQUFXLElBQUksSUFBSTtBQUduQixnQkFBSSxTQUFTLFFBQVE7QUFDcEIscUJBQU8sd0JBQXdCLElBQUk7QUFBQSxZQUNwQyxPQUFPO0FBQ04scUJBQU87QUFBQSxZQUNSO0FBQUEsVUFDRCxDQUFDO0FBQUEsUUFDRjtBQUVBLGNBQU0sU0FBUyxNQUFNLGtCQUFrQjtBQUFBLFVBQ3RDO0FBQUEsVUFDQTtBQUFBLFVBQ0EsSUFBSTtBQUFBLFVBQ0osZUFBZTtBQUFBLFVBQ2YsS0FBSyxLQUFLO0FBQUEsUUFDWCxDQUFDO0FBRUQsWUFBSTtBQUNKLFlBQUksQ0FBQztBQUFRLGlCQUFPO0FBQ3BCLFlBQUksT0FBTyxLQUFLO0FBQ2YsY0FBSSxPQUFPLE9BQU8sUUFBUSxVQUFVO0FBQ25DLGtCQUFNLE9BQU87QUFBQSxVQUNkLFdBQVcsT0FBTyxJQUFJLFVBQVU7QUFDL0Isa0JBQU0sT0FBTyxJQUFJLFNBQVM7QUFBQSxVQUMzQjtBQUFBLFFBQ0Q7QUFDQSxjQUFNLE9BQU8sK0JBQStCLE9BQU8sSUFBSTtBQUN2RCxlQUFPLEVBQUUsTUFBTSxJQUFJO0FBQUEsTUFDcEIsU0FBUyxLQUFQO0FBRUQsNEJBQW9CO0FBQ3BCLGVBQU87QUFBQSxNQUNSO0FBQUEsSUFDRDtBQUFBLEVBQ0QsQ0FBQztBQUdELE1BQUk7QUFBbUIsVUFBTTtBQUU3QixRQUFNLGdCQUErQixPQUFPLE9BQU8saUJBQWlCO0FBQUEsSUFDbkUsWUFBWTtBQUFBLE1BQ1gsT0FBTztBQUFBLElBQ1I7QUFBQSxFQUNELENBQUM7QUFFRCxTQUFPO0FBQ1I7QUFFTyxrQkFBa0IsUUFBcUIsVUFBa0I7QUFDL0QsU0FBTyxZQUFZLElBQUksTUFBTSxLQUFLLFlBQVksSUFBSSxNQUFNLEVBQUcsSUFBSSxRQUFRO0FBQ3hFO0FBRU8sK0JBQStCLFFBQXFCLFVBQWtCO0FBQzVFLE1BQUksWUFBWSxJQUFJLE1BQU0sR0FBRztBQUM1QixVQUFNLFFBQVEsWUFBWSxJQUFJLE1BQU07QUFDcEMsVUFBTSxPQUFPLFFBQVE7QUFBQSxFQUN0QjtBQUNEO0FBRUEsaUNBQ0MsUUFDQSxVQUNBLFFBQ0EsZUFDQSxNQUN5QjtBQUN6QixNQUFJO0FBQ0osTUFBSSxDQUFDLFlBQVksSUFBSSxNQUFNLEdBQUc7QUFDN0IsWUFBUSxvQkFBSSxJQUFJO0FBQ2hCLGdCQUFZLElBQUksUUFBUSxLQUFLO0FBQUEsRUFDOUIsT0FBTztBQUNOLFlBQVEsWUFBWSxJQUFJLE1BQU07QUFBQSxFQUMvQjtBQUNBLE1BQUksTUFBTSxJQUFJLFFBQVEsR0FBRztBQUN4QixXQUFPLE1BQU0sSUFBSSxRQUFRO0FBQUEsRUFDMUI7QUFFQSxNQUFJLFdBQVcsTUFBTTtBQUNwQixVQUFNLFVBQVUsSUFBSSxJQUFJLFVBQVUsVUFBVTtBQUM1QyxhQUFTLE1BQU0sR0FBRyxTQUFTLFNBQVMsU0FBUyxPQUFPO0FBQUEsRUFDckQ7QUFDQSxRQUFNLGdCQUFnQixNQUFNLFFBQVEsUUFBUSxVQUFVLFFBQVEsZUFBZSxJQUFJO0FBQ2pGLFFBQU0sSUFBSSxVQUFVLGFBQWE7QUFDakMsU0FBTztBQUNSOyIsCiAgIm5hbWVzIjogW10KfQo=
